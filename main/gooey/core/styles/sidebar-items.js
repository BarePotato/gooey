initSidebarItems({"enum":[["Alignment","Horizontally aligns items."],["FontStyle","The rendering style of the font."],["Intent","An intent for a widget. This is used to track which widget should process “default” and “cancel” intents that come from the keyboard or accessible devices."],["SystemTheme","The theme variant for the system."],["VerticalAlignment","Vertically aligns items."],["Weight","The weight of a font."]],"mod":[["border","Types for adding a border to a widget."],["padding","Types for adding padding to a widget."],["style_sheet","Types for defining sets of rules."]],"struct":[["Autofocus","Indicates to `Gooey` that it should attempt to focus this Widget upon initialization."],["BackgroundColor","The background color. Used for shape fills. Is not inherited."],["Border","A border around a widget."],["BorderOptions","Options for a single side of a [`Border`]."],["Color","An Srgba color."],["ColorPair","A pair of colors, one for each [`SystemTheme`] variant."],["FontFamily","The font family name for drawing text."],["FontSize","The font size for drawing text."],["ForegroundColor","The foreground color. Used for text and line/border drawing."],["HighlightColor","The color to highlight selections."],["LineWidth","The width of lines stroked/drawn. Default is `1.` [`Scaled`]."],["Padding","Adds padding (spacing) around a widget."],["Style","A set of style components."],["Surround","Measurements that surrouned a box/rect."],["TabIndex","Indicates the index in the tab order for the window. The indicies must be consistent within the window."],["TextColor","The foreground color. Used for text and line/border drawing."]],"trait":[["AnyStyleComponent","A [`StyleComponent`] that can be boxed for storage and cloned."],["FallbackComponent","A style component that has a fallback. An example could be `TextColor` and `ForegroundColor` components. `TextColor` could specify `ForegroundColor` as a fallback. Used with `Style::get_with_fallback`."],["StyleComponent","A style component. Implementors can be stored within `Style`."]]});
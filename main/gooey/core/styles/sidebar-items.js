initSidebarItems({"enum":[["Alignment","Horizontally aligns items."],["FontStyle","The rendering style of the font."],["SystemTheme","The theme variant for the system."],["VerticalAlignment","Vertically aligns items."],["Weight","The weight of a font."]],"struct":[["BackgroundColor","The background color. Used for shape fills. Is not inherited."],["ColorPair","A pair of colors, one for each [`SystemTheme`] variant."],["FontFamily","The font family name for drawing text."],["FontSize","The font size for drawing text."],["ForegroundColor","The foreground color. Used for text and line/border drawing."],["LineWidth","The width of lines stroked/drawn. Default is `1.` [`Points`]."],["Pixels","A unit representing physical pixels on a display."],["Points","A unit representing Desktop publishing points/PostScript points. Measurements in this scale are equal to 1/72 of an imperial inch."],["Style","A set of style components."],["Surround","Measurements that surrouned a box/rect."]],"trait":[["AnyStyleComponent","A [`StyleComponent`] that can be boxed for storage and cloned."],["StyleComponent","A style component. Implementors can be stored within [`Style`]."],["UnscaledStyleComponent","A style component that has no measurements. When implementing a new style component type, if you have no measurements, you can `impl UnscaledStyleComponent for YourType {}` to avoid needing to implement [`StyleComponent`] for both [`Points`] and [`Pixels`]."]],"type":[["Srgba","Nonlinear sRGB with an alpha component."]]});